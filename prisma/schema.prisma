// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model events {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model roles {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model schedules {
  id             Int      @id @default(autoincrement())
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  name           String
  when           String
  time           String
  recurrence     String
  required_roles Json?
  declined_by    Json?
  users_loked    Json?
  schedule       Json?
  branch         Int      @default(0)
  team           Int      @default(0)

  @@unique([branch, team, name, when, time])
}

model clients {
  id         Int        @id @default(autoincrement())
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  name       String
  document   String     @unique
  branches   branches[]
}

model branches {
  id             Int              @id @default(autoincrement())
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  name           String
  document       String           @unique
  clients        clients          @relation(fields: [client_id], references: [id])
  client_id      Int
  users_branches users_branches[]
  teams          teams[]

  @@unique([document, client_id])
}

model teams {
  id          Int           @id @default(autoincrement())
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  name        String
  users_team  users_teams[]
  event_roles event_roles[]
  branches    branches      @relation(fields: [branch_id], references: [id])
  branch_id   Int
}

model users {
  id                          Int              @id @default(autoincrement())
  created_at                  DateTime         @default(now())
  updated_at                  DateTime         @updatedAt
  name                        String
  roles                       Json?
  max_sequential              Int?             @default(1)
  exclude_me_on_days_that_are Json?
  users_team                  users_teams[]
  users_branches              users_branches[]
}

model event_roles {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  teams      teams    @relation(fields: [team_id], references: [id])
  team_id    Int

  @@unique([name, team_id])
}

model users_teams {
  user        users    @relation(fields: [user_id], references: [id])
  user_id     Int
  team        teams    @relation(fields: [team_id], references: [id])
  team_id     Int
  assigned_at DateTime @default(now())
  assigned_by String

  @@id([user_id, team_id])
}

model users_branches {
  user        users    @relation(fields: [user_id], references: [id])
  user_id     Int
  branches    branches @relation(fields: [branch_id], references: [id])
  branch_id   Int
  assigned_at DateTime @default(now())
  assigned_by String

  @@id([user_id, branch_id])
}
